{
    "openapi": "3.0.0",
    "info": {
        "title": "Your super  ApplicationAPI",
        "version": "1.0.0"
    },
    "paths": {
        "/api/v1/admin": {
            "get": {
                "tags": [
                    "Admin API CRUD"
                ],
                "summary": "Get all Admins",
                "description": "Retrieve all Admins",
                "operationId": "admin_index",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Admin"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Admin API CRUD"
                ],
                "summary": "Create a new Admin",
                "description": "Add a new Admin",
                "operationId": "admin_store",
                "requestBody": {
                    "description": "Admin save",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "firstname",
                                    "lastname",
                                    "password",
                                    "email"
                                ],
                                "properties": {
                                    "firstname": {
                                        "type": "string",
                                        "example": ""
                                    },
                                    "lastname": {
                                        "type": "string",
                                        "example": ""
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": ""
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": ""
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Admin"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api": []
                    }
                ]
            }
        },
        "/api/v1/admin/{id}": {
            "get": {
                "tags": [
                    "Admin API CRUD"
                ],
                "summary": "Get a single Admin by ID",
                "description": "Retrieve a single Admin by its ID",
                "operationId": "admin_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Admin to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Admin"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Admin API CRUD"
                ],
                "summary": "Update a Admin by ID",
                "description": "Update a specific Admin by its ID",
                "operationId": "admin_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Admin to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Admin save",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "firstname",
                                    "lastname",
                                    "email"
                                ],
                                "properties": {
                                    "firstname": {
                                        "type": "string",
                                        "example": ""
                                    },
                                    "lastname": {
                                        "type": "string",
                                        "example": ""
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": ""
                                    },
                                    "_method": {
                                        "description": "Read-only: This property cannot be modified.",
                                        "type": "string",
                                        "example": "PUT"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Admin"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Admin API CRUD"
                ],
                "summary": "Delete a Admin by ID",
                "description": "Remove a specific Admin by its ID",
                "operationId": "admin_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Admin to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Admin"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api": []
                    }
                ]
            }
        },
        "/api/v1/call_history": {
            "get": {
                "tags": [
                    "CallHistory API CRUD"
                ],
                "summary": "Get all CallHistorys",
                "description": "Retrieve all CallHistorys",
                "operationId": "call_history_index",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CallHistory"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "CallHistory API CRUD"
                ],
                "summary": "Create a new CallHistory",
                "description": "Add a new CallHistory",
                "operationId": "call_history_store",
                "requestBody": {
                    "description": "CallHistory save",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "doctor_id",
                                    "patient_id",
                                    "duration"
                                ],
                                "properties": {
                                    "doctor_id": {
                                        "type": "integer",
                                        "example": ""
                                    },
                                    "patient_id": {
                                        "type": "integer",
                                        "example": ""
                                    },
                                    "duration": {
                                        "type": "integer",
                                        "example": ""
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CallHistory"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api": []
                    }
                ]
            }
        },
        "/api/v1/call_history/{id}": {
            "get": {
                "tags": [
                    "CallHistory API CRUD"
                ],
                "summary": "Get a single CallHistory by ID",
                "description": "Retrieve a single CallHistory by its ID",
                "operationId": "call_history_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the CallHistory to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CallHistory"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "CallHistory API CRUD"
                ],
                "summary": "Update a CallHistory by ID",
                "description": "Update a specific CallHistory by its ID",
                "operationId": "call_history_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the CallHistory to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "CallHistory save",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "doctor_id",
                                    "patient_id",
                                    "duration"
                                ],
                                "properties": {
                                    "doctor_id": {
                                        "type": "integer",
                                        "example": ""
                                    },
                                    "patient_id": {
                                        "type": "integer",
                                        "example": ""
                                    },
                                    "duration": {
                                        "type": "integer",
                                        "example": ""
                                    },
                                    "_method": {
                                        "description": "Read-only: This property cannot be modified.",
                                        "type": "string",
                                        "example": "PUT"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CallHistory"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "CallHistory API CRUD"
                ],
                "summary": "Delete a CallHistory by ID",
                "description": "Remove a specific CallHistory by its ID",
                "operationId": "call_history_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the CallHistory to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CallHistory"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api": []
                    }
                ]
            }
        },
        "/api/v1/disease": {
            "get": {
                "tags": [
                    "Disease API CRUD"
                ],
                "summary": "Get all Diseases",
                "description": "Retrieve all Diseases",
                "operationId": "disease_index",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Disease"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Disease API CRUD"
                ],
                "summary": "Create a new Disease",
                "description": "Add a new Disease",
                "operationId": "disease_store",
                "requestBody": {
                    "description": "Disease save",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "name",
                                    "treatment"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": ""
                                    },
                                    "treatment": {
                                        "type": "string",
                                        "example": ""
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Disease"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api": []
                    }
                ]
            }
        },
        "/api/v1/disease/{id}": {
            "get": {
                "tags": [
                    "Disease API CRUD"
                ],
                "summary": "Get a single Disease by ID",
                "description": "Retrieve a single Disease by its ID",
                "operationId": "disease_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Disease to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Disease"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Disease API CRUD"
                ],
                "summary": "Update a Disease by ID",
                "description": "Update a specific Disease by its ID",
                "operationId": "disease_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Disease to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Disease save",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "name",
                                    "treatment"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": ""
                                    },
                                    "treatment": {
                                        "type": "string",
                                        "example": ""
                                    },
                                    "_method": {
                                        "description": "Read-only: This property cannot be modified.",
                                        "type": "string",
                                        "example": "PUT"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Disease"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Disease API CRUD"
                ],
                "summary": "Delete a Disease by ID",
                "description": "Remove a specific Disease by its ID",
                "operationId": "disease_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Disease to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Disease"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api": []
                    }
                ]
            }
        },
        "/api/v1/doctor": {
            "get": {
                "tags": [
                    "Doctor API CRUD"
                ],
                "summary": "Get all Doctors",
                "description": "Retrieve all Doctors",
                "operationId": "doctor_index",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Doctor"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Doctor API CRUD"
                ],
                "summary": "Create a new Doctor",
                "description": "Add a new Doctor",
                "operationId": "doctor_store",
                "requestBody": {
                    "description": "Doctor save",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "firstname",
                                    "lastname",
                                    "password",
                                    "email",
                                    "contact",
                                    "photo",
                                    "about",
                                    "education",
                                    "practice",
                                    "residency"
                                ],
                                "properties": {
                                    "firstname": {
                                        "type": "string",
                                        "example": ""
                                    },
                                    "lastname": {
                                        "type": "string",
                                        "example": ""
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": ""
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": ""
                                    },
                                    "contact": {
                                        "type": "string",
                                        "example": ""
                                    },
                                    "photo": {
                                        "type": "file",
                                        "example": ""
                                    },
                                    "about": {
                                        "type": "string",
                                        "example": ""
                                    },
                                    "education": {
                                        "type": "string",
                                        "example": ""
                                    },
                                    "practice": {
                                        "type": "string",
                                        "example": ""
                                    },
                                    "residency": {
                                        "type": "string",
                                        "example": ""
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Doctor"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api": []
                    }
                ]
            }
        },
        "/api/v1/doctor/{id}": {
            "get": {
                "tags": [
                    "Doctor API CRUD"
                ],
                "summary": "Get a single Doctor by ID",
                "description": "Retrieve a single Doctor by its ID",
                "operationId": "doctor_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Doctor to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Doctor"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Doctor API CRUD"
                ],
                "summary": "Update a Doctor by ID",
                "description": "Update a specific Doctor by its ID",
                "operationId": "doctor_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Doctor to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Doctor save",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "firstname",
                                    "lastname",
                                    "email",
                                    "contact",
                                    "photo",
                                    "about",
                                    "education",
                                    "practice",
                                    "residency"
                                ],
                                "properties": {
                                    "firstname": {
                                        "type": "string",
                                        "example": ""
                                    },
                                    "lastname": {
                                        "type": "string",
                                        "example": ""
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": ""
                                    },
                                    "contact": {
                                        "type": "string",
                                        "example": ""
                                    },
                                    "photo": {
                                        "type": "file",
                                        "example": ""
                                    },
                                    "about": {
                                        "type": "string",
                                        "example": ""
                                    },
                                    "education": {
                                        "type": "string",
                                        "example": ""
                                    },
                                    "practice": {
                                        "type": "string",
                                        "example": ""
                                    },
                                    "residency": {
                                        "type": "string",
                                        "example": ""
                                    },
                                    "_method": {
                                        "description": "Read-only: This property cannot be modified.",
                                        "type": "string",
                                        "example": "PUT"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Doctor"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Doctor API CRUD"
                ],
                "summary": "Delete a Doctor by ID",
                "description": "Remove a specific Doctor by its ID",
                "operationId": "doctor_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Doctor to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Doctor"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api": []
                    }
                ]
            }
        },
        "/api/v1/first_aid": {
            "get": {
                "tags": [
                    "FirstAid API CRUD"
                ],
                "summary": "Get all FirstAids",
                "description": "Retrieve all FirstAids",
                "operationId": "first_aid_index",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FirstAid"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "FirstAid API CRUD"
                ],
                "summary": "Create a new FirstAid",
                "description": "Add a new FirstAid",
                "operationId": "first_aid_store",
                "requestBody": {
                    "description": "FirstAid save",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "case",
                                    "photo",
                                    "treatment"
                                ],
                                "properties": {
                                    "case": {
                                        "type": "string",
                                        "example": ""
                                    },
                                    "photo": {
                                        "type": "file",
                                        "example": ""
                                    },
                                    "treatment": {
                                        "type": "string",
                                        "example": ""
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FirstAid"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api": []
                    }
                ]
            }
        },
        "/api/v1/first_aid/{id}": {
            "get": {
                "tags": [
                    "FirstAid API CRUD"
                ],
                "summary": "Get a single FirstAid by ID",
                "description": "Retrieve a single FirstAid by its ID",
                "operationId": "first_aid_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the FirstAid to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FirstAid"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "FirstAid API CRUD"
                ],
                "summary": "Update a FirstAid by ID",
                "description": "Update a specific FirstAid by its ID",
                "operationId": "first_aid_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the FirstAid to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "FirstAid save",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "case",
                                    "photo",
                                    "treatment"
                                ],
                                "properties": {
                                    "case": {
                                        "type": "string",
                                        "example": ""
                                    },
                                    "photo": {
                                        "type": "file",
                                        "example": ""
                                    },
                                    "treatment": {
                                        "type": "string",
                                        "example": ""
                                    },
                                    "_method": {
                                        "description": "Read-only: This property cannot be modified.",
                                        "type": "string",
                                        "example": "PUT"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FirstAid"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "FirstAid API CRUD"
                ],
                "summary": "Delete a FirstAid by ID",
                "description": "Remove a specific FirstAid by its ID",
                "operationId": "first_aid_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the FirstAid to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FirstAid"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api": []
                    }
                ]
            }
        },
        "/api/v1/patient": {
            "get": {
                "tags": [
                    "Patient API CRUD"
                ],
                "summary": "Get all Patients",
                "description": "Retrieve all Patients",
                "operationId": "patient_index",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Patient"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Patient API CRUD"
                ],
                "summary": "Create a new Patient",
                "description": "Add a new Patient",
                "operationId": "patient_store",
                "requestBody": {
                    "description": "Patient save",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "firstname",
                                    "lastname",
                                    "password",
                                    "email",
                                    "contact"
                                ],
                                "properties": {
                                    "firstname": {
                                        "type": "string",
                                        "example": ""
                                    },
                                    "lastname": {
                                        "type": "string",
                                        "example": ""
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": ""
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": ""
                                    },
                                    "contact": {
                                        "type": "string",
                                        "example": ""
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Patient"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api": []
                    }
                ]
            }
        },
        "/api/v1/patient/{id}": {
            "get": {
                "tags": [
                    "Patient API CRUD"
                ],
                "summary": "Get a single Patient by ID",
                "description": "Retrieve a single Patient by its ID",
                "operationId": "patient_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Patient to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Patient"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Patient API CRUD"
                ],
                "summary": "Update a Patient by ID",
                "description": "Update a specific Patient by its ID",
                "operationId": "patient_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Patient to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Patient save",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "firstname",
                                    "lastname",
                                    "email",
                                    "contact"
                                ],
                                "properties": {
                                    "firstname": {
                                        "type": "string",
                                        "example": ""
                                    },
                                    "lastname": {
                                        "type": "string",
                                        "example": ""
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": ""
                                    },
                                    "contact": {
                                        "type": "string",
                                        "example": ""
                                    },
                                    "_method": {
                                        "description": "Read-only: This property cannot be modified.",
                                        "type": "string",
                                        "example": "PUT"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Patient"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Patient API CRUD"
                ],
                "summary": "Delete a Patient by ID",
                "description": "Remove a specific Patient by its ID",
                "operationId": "patient_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Patient to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Patient"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api": []
                    }
                ]
            }
        },
        "/api/v1/profession": {
            "get": {
                "tags": [
                    "Profession API CRUD"
                ],
                "summary": "Get all Professions",
                "description": "Retrieve all Professions",
                "operationId": "profession_index",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Profession"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Profession API CRUD"
                ],
                "summary": "Create a new Profession",
                "description": "Add a new Profession",
                "operationId": "profession_store",
                "requestBody": {
                    "description": "Profession save",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": ""
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Profession"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api": []
                    }
                ]
            }
        },
        "/api/v1/profession/{id}": {
            "get": {
                "tags": [
                    "Profession API CRUD"
                ],
                "summary": "Get a single Profession by ID",
                "description": "Retrieve a single Profession by its ID",
                "operationId": "profession_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Profession to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Profession"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Profession API CRUD"
                ],
                "summary": "Update a Profession by ID",
                "description": "Update a specific Profession by its ID",
                "operationId": "profession_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Profession to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Profession save",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": ""
                                    },
                                    "_method": {
                                        "description": "Read-only: This property cannot be modified.",
                                        "type": "string",
                                        "example": "PUT"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Profession"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Profession API CRUD"
                ],
                "summary": "Delete a Profession by ID",
                "description": "Remove a specific Profession by its ID",
                "operationId": "profession_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Profession to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Profession"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api": []
                    }
                ]
            }
        },
        "/api/v1/symptom": {
            "get": {
                "tags": [
                    "Symptom API CRUD"
                ],
                "summary": "Get all Symptoms",
                "description": "Retrieve all Symptoms",
                "operationId": "symptom_index",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Symptom"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Symptom API CRUD"
                ],
                "summary": "Create a new Symptom",
                "description": "Add a new Symptom",
                "operationId": "symptom_store",
                "requestBody": {
                    "description": "Symptom save",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": ""
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Symptom"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api": []
                    }
                ]
            }
        },
        "/api/v1/symptom/{id}": {
            "get": {
                "tags": [
                    "Symptom API CRUD"
                ],
                "summary": "Get a single Symptom by ID",
                "description": "Retrieve a single Symptom by its ID",
                "operationId": "symptom_show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Symptom to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Symptom"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Symptom API CRUD"
                ],
                "summary": "Update a Symptom by ID",
                "description": "Update a specific Symptom by its ID",
                "operationId": "symptom_update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Symptom to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Symptom save",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": ""
                                    },
                                    "_method": {
                                        "description": "Read-only: This property cannot be modified.",
                                        "type": "string",
                                        "example": "PUT"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Symptom"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Symptom API CRUD"
                ],
                "summary": "Delete a Symptom by ID",
                "description": "Remove a specific Symptom by its ID",
                "operationId": "symptom_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Symptom to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Symptom"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "Admin": {
                "title": "Admin title",
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": true
                    },
                    "message": {
                        "type": "string",
                        "example": "Successfully"
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "id": {
                                    "type": "integer"
                                },
                                "firstname": {
                                    "type": "string"
                                },
                                "lastname": {
                                    "type": "string"
                                },
                                "password": {
                                    "type": "string"
                                },
                                "email": {
                                    "type": "string"
                                },
                                "created_at": {
                                    "type": "string",
                                    "format": "date-time"
                                },
                                "updated_at": {
                                    "type": "string",
                                    "format": "date-time"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "code": {
                        "type": "integer",
                        "example": 200
                    }
                },
                "type": "object"
            },
            "CallHistory": {
                "title": "CallHistory title",
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": true
                    },
                    "message": {
                        "type": "string",
                        "example": "Successfully"
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "id": {
                                    "type": "integer"
                                },
                                "doctor_id": {
                                    "type": "integer"
                                },
                                "patient_id": {
                                    "type": "integer"
                                },
                                "duration": {
                                    "type": "integer"
                                },
                                "created_at": {
                                    "type": "string",
                                    "format": "date-time"
                                },
                                "updated_at": {
                                    "type": "string",
                                    "format": "date-time"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "code": {
                        "type": "integer",
                        "example": 200
                    }
                },
                "type": "object"
            },
            "Disease": {
                "title": "Disease title",
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": true
                    },
                    "message": {
                        "type": "string",
                        "example": "Successfully"
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "id": {
                                    "type": "integer"
                                },
                                "name": {
                                    "type": "string"
                                },
                                "treatment": {
                                    "type": "string"
                                },
                                "created_at": {
                                    "type": "string",
                                    "format": "date-time"
                                },
                                "updated_at": {
                                    "type": "string",
                                    "format": "date-time"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "code": {
                        "type": "integer",
                        "example": 200
                    }
                },
                "type": "object"
            },
            "Doctor": {
                "title": "Doctor title",
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": true
                    },
                    "message": {
                        "type": "string",
                        "example": "Successfully"
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "id": {
                                    "type": "integer"
                                },
                                "firstname": {
                                    "type": "string"
                                },
                                "lastname": {
                                    "type": "string"
                                },
                                "password": {
                                    "type": "string"
                                },
                                "email": {
                                    "type": "string"
                                },
                                "contact": {
                                    "type": "string"
                                },
                                "photo": {
                                    "type": "file"
                                },
                                "about": {
                                    "type": "string"
                                },
                                "education": {
                                    "type": "string"
                                },
                                "practice": {
                                    "type": "string"
                                },
                                "residency": {
                                    "type": "string"
                                },
                                "created_at": {
                                    "type": "string",
                                    "format": "date-time"
                                },
                                "updated_at": {
                                    "type": "string",
                                    "format": "date-time"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "code": {
                        "type": "integer",
                        "example": 200
                    }
                },
                "type": "object"
            },
            "FirstAid": {
                "title": "FirstAid title",
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": true
                    },
                    "message": {
                        "type": "string",
                        "example": "Successfully"
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "id": {
                                    "type": "integer"
                                },
                                "case": {
                                    "type": "string"
                                },
                                "photo": {
                                    "type": "file"
                                },
                                "treatment": {
                                    "type": "string"
                                },
                                "created_at": {
                                    "type": "string",
                                    "format": "date-time"
                                },
                                "updated_at": {
                                    "type": "string",
                                    "format": "date-time"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "code": {
                        "type": "integer",
                        "example": 200
                    }
                },
                "type": "object"
            },
            "Patient": {
                "title": "Patient title",
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": true
                    },
                    "message": {
                        "type": "string",
                        "example": "Successfully"
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "id": {
                                    "type": "integer"
                                },
                                "firstname": {
                                    "type": "string"
                                },
                                "lastname": {
                                    "type": "string"
                                },
                                "password": {
                                    "type": "string"
                                },
                                "email": {
                                    "type": "string"
                                },
                                "contact": {
                                    "type": "string"
                                },
                                "created_at": {
                                    "type": "string",
                                    "format": "date-time"
                                },
                                "updated_at": {
                                    "type": "string",
                                    "format": "date-time"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "code": {
                        "type": "integer",
                        "example": 200
                    }
                },
                "type": "object"
            },
            "Profession": {
                "title": "Profession title",
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": true
                    },
                    "message": {
                        "type": "string",
                        "example": "Successfully"
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "id": {
                                    "type": "integer"
                                },
                                "name": {
                                    "type": "string"
                                },
                                "created_at": {
                                    "type": "string",
                                    "format": "date-time"
                                },
                                "updated_at": {
                                    "type": "string",
                                    "format": "date-time"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "code": {
                        "type": "integer",
                        "example": 200
                    }
                },
                "type": "object"
            },
            "Symptom": {
                "title": "Symptom title",
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": true
                    },
                    "message": {
                        "type": "string",
                        "example": "Successfully"
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "id": {
                                    "type": "integer"
                                },
                                "name": {
                                    "type": "string"
                                },
                                "created_at": {
                                    "type": "string",
                                    "format": "date-time"
                                },
                                "updated_at": {
                                    "type": "string",
                                    "format": "date-time"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "code": {
                        "type": "integer",
                        "example": 200
                    }
                },
                "type": "object"
            },
            "Error": {
                "title": "ResponseError",
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": false
                    },
                    "message": {
                        "type": "string",
                        "example": "Not found"
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "example": []
                    },
                    "code": {
                        "type": "integer",
                        "example": 404
                    }
                },
                "type": "object"
            }
        }
    }
}